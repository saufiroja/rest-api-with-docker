version: '3.8'
services:
  # APP
  rest_api:
    container_name: rest_api_c
    image: rest_api:0.0.1
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_SSL=${DB_SSL}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - JWT_ALGORITHMS=${JWT_ALGORITHMS}
    depends_on:
      - sequelize_db
    links:
      - sequelize_db
    volumes:
      - ./src:/app/src
      - /app/src/node_modules
    command: npm run dev

  # DATABASE
  sequelize_db:
    container_name: sequelize_db_c
    image: 'postgres:12'
    env_file:
      - .env
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - 'database:/var/lib/postgresql/data'

  # LINT
  lint:
    build: .
    entrypoint: npm run lint
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}

  # MIGRATE
  migrate:
    build: .
    entrypoint: npm run db:migrate
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - sequelize_db
    links:
      - sequelize_db
  migrate_undo:
    build: .
    entrypoint: npm run db:migrate:undo
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - sequelize_db
    links:
      - sequelize_db

volumes:
  database: {}
